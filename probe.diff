diff --git a/api/v1alpha1/nicclusterpolicy_types.go b/api/v1alpha1/nicclusterpolicy_types.go
index 11284c7..da40f21 100644
--- a/api/v1alpha1/nicclusterpolicy_types.go
+++ b/api/v1alpha1/nicclusterpolicy_types.go
@@ -46,10 +46,23 @@ type ImageSpec struct {
 	Version string `json:"version"`
 }
 
+type PodProbeSpec struct {
+	InitialDelaySeconds int `json:"initialDelaySeconds"`
+	FailureThreshold int `json:"failureThreshold"`
+	SuccessThreshold int `json:"successThreshold"`
+	PeriodSeconds int `json:"periodSeconds"`
+}
+
 // OFEDDriverSpec describes configuration options for OFED driver
 type OFEDDriverSpec struct {
 	// Image information for ofed driver container
 	ImageSpec `json:""`
+	// Pod startup probe settings
+	StartupProbe *PodProbeSpec `json:"startupProbe,omitempty"`
+	// Pod liveness probe settings
+	LivenessProbe *PodProbeSpec `json:"livenessProbe,omitempty"`
+	// Pod readiness probe settings
+	ReadinessProbe *PodProbeSpec `json:"readinessProbe,omitempty"`
 }
 
 // NVPeerDriverSpec describes configuration options for NV Peer Memory driver
diff --git a/api/v1alpha1/zz_generated.deepcopy.go b/api/v1alpha1/zz_generated.deepcopy.go
index f288671..268a120 100644
--- a/api/v1alpha1/zz_generated.deepcopy.go
+++ b/api/v1alpha1/zz_generated.deepcopy.go
@@ -350,7 +350,7 @@ func (in *NicClusterPolicySpec) DeepCopyInto(out *NicClusterPolicySpec) {
 	if in.OFEDDriver != nil {
 		in, out := &in.OFEDDriver, &out.OFEDDriver
 		*out = new(OFEDDriverSpec)
-		**out = **in
+		(*in).DeepCopyInto(*out)
 	}
 	if in.NVPeerDriver != nil {
 		in, out := &in.NVPeerDriver, &out.NVPeerDriver
@@ -408,6 +408,21 @@ func (in *NicClusterPolicyStatus) DeepCopy() *NicClusterPolicyStatus {
 func (in *OFEDDriverSpec) DeepCopyInto(out *OFEDDriverSpec) {
 	*out = *in
 	out.ImageSpec = in.ImageSpec
+	if in.StartupProbe != nil {
+		in, out := &in.StartupProbe, &out.StartupProbe
+		*out = new(PodProbeSpec)
+		**out = **in
+	}
+	if in.LivenessProbe != nil {
+		in, out := &in.LivenessProbe, &out.LivenessProbe
+		*out = new(PodProbeSpec)
+		**out = **in
+	}
+	if in.ReadinessProbe != nil {
+		in, out := &in.ReadinessProbe, &out.ReadinessProbe
+		*out = new(PodProbeSpec)
+		**out = **in
+	}
 }
 
 // DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OFEDDriverSpec.
@@ -420,6 +435,21 @@ func (in *OFEDDriverSpec) DeepCopy() *OFEDDriverSpec {
 	return out
 }
 
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *PodProbeSpec) DeepCopyInto(out *PodProbeSpec) {
+	*out = *in
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodProbeSpec.
+func (in *PodProbeSpec) DeepCopy() *PodProbeSpec {
+	if in == nil {
+		return nil
+	}
+	out := new(PodProbeSpec)
+	in.DeepCopyInto(out)
+	return out
+}
+
 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *SecondaryNetworkSpec) DeepCopyInto(out *SecondaryNetworkSpec) {
 	*out = *in
diff --git a/config/crd/bases/mellanox.com_nicclusterpolicies.yaml b/config/crd/bases/mellanox.com_nicclusterpolicies.yaml
index d5e1e06..a49d391 100644
--- a/config/crd/bases/mellanox.com_nicclusterpolicies.yaml
+++ b/config/crd/bases/mellanox.com_nicclusterpolicies.yaml
@@ -71,9 +71,60 @@ spec:
                   image:
                     pattern: '[a-zA-Z0-9\-]+'
                     type: string
+                  livenessProbe:
+                    description: Pod liveness probe settings
+                    properties:
+                      failureThreshold:
+                        type: integer
+                      initialDelaySeconds:
+                        type: integer
+                      periodSeconds:
+                        type: integer
+                      successThreshold:
+                        type: integer
+                    required:
+                    - failureThreshold
+                    - initialDelaySeconds
+                    - periodSeconds
+                    - successThreshold
+                    type: object
+                  readinessProbe:
+                    description: Pod readiness probe settings
+                    properties:
+                      failureThreshold:
+                        type: integer
+                      initialDelaySeconds:
+                        type: integer
+                      periodSeconds:
+                        type: integer
+                      successThreshold:
+                        type: integer
+                    required:
+                    - failureThreshold
+                    - initialDelaySeconds
+                    - periodSeconds
+                    - successThreshold
+                    type: object
                   repository:
                     pattern: '[a-zA-Z0-9\.\-\/]+'
                     type: string
+                  startupProbe:
+                    description: Pod startup probe settings
+                    properties:
+                      failureThreshold:
+                        type: integer
+                      initialDelaySeconds:
+                        type: integer
+                      periodSeconds:
+                        type: integer
+                      successThreshold:
+                        type: integer
+                    required:
+                    - failureThreshold
+                    - initialDelaySeconds
+                    - periodSeconds
+                    - successThreshold
+                    type: object
                   version:
                     pattern: '[a-zA-Z0-9\.-]+'
                     type: string
diff --git a/deployment/network-operator/crds/mellanox.com_nicclusterpolicies.yaml b/deployment/network-operator/crds/mellanox.com_nicclusterpolicies.yaml
index d5e1e06..a49d391 100644
--- a/deployment/network-operator/crds/mellanox.com_nicclusterpolicies.yaml
+++ b/deployment/network-operator/crds/mellanox.com_nicclusterpolicies.yaml
@@ -71,9 +71,60 @@ spec:
                   image:
                     pattern: '[a-zA-Z0-9\-]+'
                     type: string
+                  livenessProbe:
+                    description: Pod liveness probe settings
+                    properties:
+                      failureThreshold:
+                        type: integer
+                      initialDelaySeconds:
+                        type: integer
+                      periodSeconds:
+                        type: integer
+                      successThreshold:
+                        type: integer
+                    required:
+                    - failureThreshold
+                    - initialDelaySeconds
+                    - periodSeconds
+                    - successThreshold
+                    type: object
+                  readinessProbe:
+                    description: Pod readiness probe settings
+                    properties:
+                      failureThreshold:
+                        type: integer
+                      initialDelaySeconds:
+                        type: integer
+                      periodSeconds:
+                        type: integer
+                      successThreshold:
+                        type: integer
+                    required:
+                    - failureThreshold
+                    - initialDelaySeconds
+                    - periodSeconds
+                    - successThreshold
+                    type: object
                   repository:
                     pattern: '[a-zA-Z0-9\.\-\/]+'
                     type: string
+                  startupProbe:
+                    description: Pod startup probe settings
+                    properties:
+                      failureThreshold:
+                        type: integer
+                      initialDelaySeconds:
+                        type: integer
+                      periodSeconds:
+                        type: integer
+                      successThreshold:
+                        type: integer
+                    required:
+                    - failureThreshold
+                    - initialDelaySeconds
+                    - periodSeconds
+                    - successThreshold
+                    type: object
                   version:
                     pattern: '[a-zA-Z0-9\.-]+'
                     type: string
diff --git a/manifests/stage-ofed-driver/0050_ofed-driver-ds.yaml b/manifests/stage-ofed-driver/0050_ofed-driver-ds.yaml
index 6ab6373..330f3a4 100644
--- a/manifests/stage-ofed-driver/0050_ofed-driver-ds.yaml
+++ b/manifests/stage-ofed-driver/0050_ofed-driver-ds.yaml
@@ -72,25 +72,26 @@ spec:
             exec:
               command:
                 [sh, -c, 'ls /.driver-ready']
-            initialDelaySeconds: 10
-            failureThreshold: 60
-            successThreshold: 1
-            periodSeconds: 10
+            initialDelaySeconds: {{ .CrSpec.StartupProbe.InitialDelaySeconds }}
+            failureThreshold: {{ .CrSpec.StartupProbe.FailureThreshold }}
+            successThreshold: {{ .CrSpec.StartupProbe.SuccessThreshold }}
+            periodSeconds: {{ .CrSpec.StartupProbe.PeriodSeconds }}
           livenessProbe:
             exec:
               command:
                 [sh, -c, 'lsmod | grep mlx5_core']
-            periodSeconds: 30
-            initialDelaySeconds: 30
-            failureThreshold: 1
-            successThreshold: 1
+            initialDelaySeconds: { { .CrSpec.LivenessProbe.InitialDelaySeconds } }
+            failureThreshold: { { .CrSpec.LivenessProbe.FailureThreshold } }
+            successThreshold: { { .CrSpec.LivenessProbe.SuccessThreshold } }
+            periodSeconds: { { .CrSpec.LivenessProbe.PeriodSeconds } }
           readinessProbe:
             exec:
               command:
                 [sh, -c, 'lsmod | grep mlx5_core']
-            periodSeconds: 30
-            initialDelaySeconds: 10
-            failureThreshold: 1
+            initialDelaySeconds: { { .CrSpec.ReadinessProbe.InitialDelaySeconds } }
+            failureThreshold: { { .CrSpec.ReadinessProbe.FailureThreshold } }
+            successThreshold: { { .CrSpec.ReadinessProbe.SuccessThreshold } }
+            periodSeconds: { { .CrSpec.ReadinessProbe.PeriodSeconds } }
       # unloading OFED modules can take more time than default terminationGracePeriod (30 sec)
       terminationGracePeriodSeconds: 120
       volumes:
diff --git a/pkg/state/state_ofed.go b/pkg/state/state_ofed.go
index bf215db..01b5bda 100644
--- a/pkg/state/state_ofed.go
+++ b/pkg/state/state_ofed.go
@@ -93,6 +93,8 @@ func (s *stateOFED) Sync(customResource interface{}, infoCatalog InfoCatalog) (S
 	nodeInfo := infoCatalog.GetNodeInfoProvider()
 	if nodeInfo == nil {
 		return SyncStateError, errors.New("unexpected state, catalog does not provide node information")
+
+
 	}
 
 	objs, err := s.getManifestObjects(cr, nodeInfo)
@@ -149,6 +151,33 @@ func (s *stateOFED) getManifestObjects(
 		return nil, err
 	}
 
+	if cr.Spec.OFEDDriver.StartupProbe == nil {
+		cr.Spec.OFEDDriver.StartupProbe = &mellanoxv1alpha1.PodProbeSpec{
+			InitialDelaySeconds: 10,
+			FailureThreshold: 60,
+			SuccessThreshold: 1,
+			PeriodSeconds: 10,
+		}
+	}
+
+	if cr.Spec.OFEDDriver.LivenessProbe == nil {
+		cr.Spec.OFEDDriver.LivenessProbe = &mellanoxv1alpha1.PodProbeSpec{
+			InitialDelaySeconds: 30,
+			FailureThreshold: 1,
+			SuccessThreshold: 1,
+			PeriodSeconds: 30,
+		}
+	}
+
+	if cr.Spec.OFEDDriver.ReadinessProbe == nil {
+		cr.Spec.OFEDDriver.ReadinessProbe = &mellanoxv1alpha1.PodProbeSpec{
+			InitialDelaySeconds: 10,
+			FailureThreshold: 1,
+			SuccessThreshold: 1,
+			PeriodSeconds: 30,
+		}
+	}
+
 	renderData := &ofedManifestRenderData{
 		CrSpec: cr.Spec.OFEDDriver,
 		RuntimeSpec: &ofedRuntimeSpec{
